{"version":3,"sources":["utils/setup.ts","api/config.ts","api/home.ts","repositories/StudentRepository.ts","repositories/module.ts","repositories/UnstatedBinds.ts","api/auth.ts","services/StudentService.ts","services/module.ts","utils/container.ts","utils/colors.ts","components/TextField.tsx","components/ProgressBar.tsx","components/SubjectCard.tsx","scenes/LoginScene/components/index.ts","scenes/LoginScene/index.tsx","scenes/HomeScene/components/index.ts","scenes/HomeScene/components/Card.ts","scenes/ProfileScene/components/index.tsx","scenes/ProfileScene/index.tsx","scenes/ReviewScene/components/index.tsx","scenes/ReviewScene/index.tsx","scenes/ProgressScene/components/index.tsx","scenes/ProgressScene/index.tsx","scenes/HomeScene/components/Dates.tsx","scenes/HomeScene/index.tsx","registerServiceWorker.js","scenes/SubjectScene/components/index.ts","scenes/SubjectScene/index.tsx","index.tsx"],"names":["decorate","injectable","Container","client","axios","create","headers","baseURL","HomeAPI","homeData","a","token","get","Authorization","then","response","console","log","data","catch","err","StudentRepository","state","student","dates","setStudent","localStorage","setItem","JSON","stringify","setState","getHomeData","getToken","newStudent","image","plan","note","localToken","getItem","getStudent","localStudent","studentJson","parse","getDates","length","actualDate","Date","month","getUTCMonth","maxDays","includes","getFullYear","newDates","i","push","RepositoriesModule","ContainerModule","bind","toSelf","inSingletonScope","UNSTATED_CONTAINERS","Symbol","UnstatedBindsModule","toDynamicValue","context","container","AuthAPI","authStudent","post","StudentService","inject","login","email","password","studentRepo","ServicesModule","UnsignedMonitoriaContainer","load","MonitoriaContainer","SIGNING","_SIGNING","Colors","primaryColor","primaryColorLight","secundaryColor","accentColor","window","innerHeight","windowWidth","innerWidth","TextFieldContainer","styled","div","TextField","props","inputProps","placeholder","type","onChange","isPassword","style","color","bordered","Password","visibilityToggle","Filler","ProgressBar","completed","width","backgroundColor","ImageContainer","SubjectContainer","TextContainer","CheckboxContainer","SubjectCard","key","title","chapters","checked","onClick","backgroundImage","fontSize","fontWeight","map","chapter","opacity","lineHeight","chapterTitle","toString","Check","DiagonalContainer","LogoContainer","InputContainer","ButtonContainer","ErrorMessage","span","windowHeight","LoginScene","resolve","showError","onSubmitLogin","studentServ","history","replace","onChangeEmail","e","target","value","onChangePassword","this","height","borderRadius","marginTop","bodyStyle","display","flexDirection","justifyContent","alignItems","padding","src","onSubmit","textAlign","to","size","Component","withRouter","Body","Header","UserGreetings","ScrollableCardBody","CardHeaderContainer","ProgressContainer","ProgressLabelContainer","ProfileHeader","ProfileImage","ProfileScene","tab","studentData","name","goals","university","course","Array","onChangeTab","marginLeft","backgroundPosition","verticalAlign","backgroundSize","ReviewHeader","ReviewScene","ProgressHeader","ProgressScene","Card","HomeScene","days","BottomNavigation","showLabels","position","bottom","left","BottomNavigationAction","label","icon","Home","CalendarToday","TrendingUp","EmojiPeople","day","boxShadow","fontFamily","contents","subject","subjectTitle","weekAssignment","subTitle","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ContentScene","App","exact","path","render","component","SubjectScene","ReactDom","document","getElementById","URL","process","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a91e675c.chunk.js","sourcesContent":["import 'reflect-metadata'\nimport { decorate, injectable} from 'inversify'\nimport { Container } from 'unstated'\n\n\ndecorate(injectable(), Container)","import axios, { AxiosRequestConfig } from 'axios'\n\nconst token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVmNjI5NzFiMDczM2Q4OGMzNWMwMzlhMyIsImlhdCI6MTYwMTEzNjgzMSwiZXhwIjoxNjAxMjIzMjMxfQ.Ng-74mvm6-ZfM9mc136UasdgZHMfCnYMtQVb37ukE9o'\n\nconst config: AxiosRequestConfig = {\n    headers: { 'Content-Type': 'application/json' },\n    baseURL: 'https://mentoria-back.herokuapp.com/api/'\n}\n\nconst client = axios.create(config)\n\nexport default client","import { config } from 'process'\nimport client from './config'\n\ninterface homeStudent {\n    token: string\n}\n\nclass HomeAPI {\n\n    static homeData = async ({ token }: homeStudent) => {\n        return await client.get('home', { headers: { Authorization: `Bearer ${token}` } })\n            .then((response) => {\n                console.log('getHomeData', response);\n                \n                return response.data\n            })\n            .catch((err) => {\n                console.log(err)\n                return null\n            })\n    }\n\n}\n\nexport default HomeAPI","import { injectable } from 'inversify';\nimport { Container } from 'unstated'\nimport HomeAPI from '../api/home'\n\ntype StudentRepositoryState = {\n    student: any | null,\n    homeData: any | null,\n    token: string | null,\n    dates: Array<number>\n}\n\n@injectable()\nexport class StudentRepository extends Container<StudentRepositoryState> {\n    readonly state: StudentRepositoryState = {\n        student: null,\n        homeData: null,\n        token: null,\n        dates: []\n    }\n\n    setStudent = async (student: any, token: string) => {\n        localStorage.setItem('student', JSON.stringify(student))\n        localStorage.setItem('token', JSON.stringify(token))\n        await this.setState({ student, token })\n    }\n\n    getHomeData = async () => {\n        const { homeData, token } = this.state\n        if (homeData == null) {\n            if (token == null) {\n                const localToken = this.getToken()\n                if (localToken == null) {\n                    return null\n                }\n            }\n            const response = await HomeAPI.homeData({ token: this.state.token! })\n            if (response == null) {\n                return null\n            } else {\n                console.log('repository: ', response)\n                let newStudent = this.state.student\n                newStudent.image = response.student.image\n                await this.setState({ homeData: { plan: response.plan, note: response.note }, student: newStudent })\n            }\n        }\n        return this.state.homeData\n    }\n\n    getToken = async () => {\n        const { token } = this.state\n        if (token == null) {\n            const localToken = localStorage.getItem('token');\n            if (localToken != null) {\n                await this.setState({ token: localToken })\n            } else {\n                return null;\n            }\n        }\n        return this.state.token\n    }\n\n    getStudent = async () => {\n        const { student } = this.state\n        if (student == null) {\n            const localStudent = localStorage.getItem('student');\n            if (localStudent != null) {\n                let studentJson = JSON.parse(localStudent)\n                await this.setState({ student: studentJson })\n            } else {\n                return null\n            }\n        }\n        return this.state.student\n    }\n\n    getDates = async () => {\n        const { dates } = this.state\n        if (dates == null || dates.length == 0) {\n            const actualDate = new Date()\n            const month = actualDate.getUTCMonth()\n            const monthThirtyDays = [4, 6, 9, 11]\n            let maxDays = 31\n\n            if (monthThirtyDays.includes(month)) {\n                maxDays = 30\n            } else if (month == 2) {\n                maxDays = actualDate.getFullYear() % 4 == 0 ? 29 : 28\n            }\n\n            let newDates = []\n\n            for (var i = 1; i <= maxDays; i++) {\n                newDates.push(i)\n            }\n            await this.setState({ dates: newDates })\n        }\n        return this.state.dates\n    }\n\n}","import { ContainerModule } from 'inversify'\nimport { StudentRepository } from './StudentRepository'\n\nexport const RepositoriesModule = new ContainerModule((bind) => {\n    bind(StudentRepository).toSelf().inSingletonScope()\n})","import { ContainerModule } from 'inversify'\nimport { Container as UnstatedContainer } from 'unstated'\nimport { StudentRepository } from './StudentRepository'\n\nexport const UNSTATED_CONTAINERS = Symbol('UNSTATED_CONTAINERS')\n\nexport const UnstatedBindsModule = new ContainerModule((bind) => {\n    bind<UnstatedContainer<any>[]>(UNSTATED_CONTAINERS)\n        .toDynamicValue((context) => {\n            return [\n                context.container.get(StudentRepository)\n            ]\n        })\n        .inSingletonScope()\n})","import client from './config'\n\ninterface authStudent {\n    email: string,\n    password: string\n}\n\nclass AuthAPI {\n\n    static authStudent = async (data: authStudent) => {\n        return await client.post('students/auth', data)\n            .then((response) => {\n                return response.data\n            })\n            .catch((err) => {\n                console.log(err)\n                return { student: null, token: null }\n            })\n    }\n\n}\n\nexport default AuthAPI","import AuthAPI from '../api/auth';\nimport { inject, injectable } from \"inversify\";\nimport { StudentRepository } from '../repositories/StudentRepository';\n\ntype LoginParams = { email: string, password: string }\n\n\n@injectable()\nclass StudentService {\n\n    @inject(StudentRepository) private studentRepo!: StudentRepository\n\n    login = async ({ email, password }: LoginParams) => {\n        let response = await AuthAPI.authStudent({ email, password })\n\n        if (response != null && response.token != null) {\n            this.studentRepo.setStudent(response.student, response.token)\n            return true\n        }\n        return false\n    }\n\n}\n\nexport default StudentService","import { ContainerModule } from 'inversify'\nimport StudentService from './StudentService'\n\n\nexport const ServicesModule = new ContainerModule((bind) => {\n    bind(StudentService).toSelf().inSingletonScope()\n})","import { Container } from 'inversify'\nimport { RepositoriesModule } from '../repositories/module'\nimport { UnstatedBindsModule } from '../repositories/UnstatedBinds'\nimport { ServicesModule } from '../services/module'\n\nconst UnsignedMonitoriaContainer = new Container()\n\nUnsignedMonitoriaContainer.load(RepositoriesModule)\nUnsignedMonitoriaContainer.load(ServicesModule)\nUnsignedMonitoriaContainer.load(UnstatedBindsModule)\n\nconst MonitoriaContainer: Container & {\n    readonly _SIGNING: symbol\n} = UnsignedMonitoriaContainer as any\n\nconst SIGNING = Symbol('MCONTAINER');\n(MonitoriaContainer as any)._SIGNING = SIGNING // To be sure there's only a valid MonitoriaContainer\n\nexport function verifySignature(toTest: any) {\n    return toTest instanceof Container && (toTest as IMonitoriaContainer)._SIGNING === SIGNING\n}\n\nexport type IMonitoriaContainer = typeof MonitoriaContainer\n\nexport default MonitoriaContainer","class Colors {\n\n    static primaryColor = '#FE8856' // fd8517\n    static primaryColorLight = '#ffbf1f'\n    static secundaryColor = '#298ce9'\n    static accentColor = '#F3F3F3'\n\n}\n\nexport default Colors","import React from 'react';\nimport { Input } from 'antd';\nimport styled from 'styled-components'\nimport Colors from '../utils/colors';\n\ninterface TextFieldProps {\n    placeholder: string\n    isPassword?: boolean\n    type?: string\n    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void\n    onSubmit?: (e: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst windowHeight = window.innerHeight\nconst windowWidth = window.innerWidth\n\nconst TextFieldContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    border: 1px solid #e0eefc;\n    border-radius: 24px;\n    margin: 8px 0 8px 0;\n    background-color: #fff;\n    height: ${windowWidth >= 1440 ? '48' : '40'}px;\n    width: 100%;\n\n    &:focus-within {\n        border: 1px solid #298ce9;\n    }\n\n`\n\nexport const TextField: React.FC<TextFieldProps> = (props) => {\n    const inputProps = { placeholder: props.placeholder, type: props.type, onChange: props.onChange }\n    return (\n        <TextFieldContainer>\n            {!props.isPassword && <Input style={{color: Colors.secundaryColor}}  {...inputProps} bordered={false} />}\n            {props.isPassword && <Input.Password style={{color: Colors.secundaryColor}} {...inputProps} bordered={false} visibilityToggle={false} />}\n        </TextFieldContainer>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface ProgressBarPropsType {\n    color: string\n    completed: string\n}\n\nconst Container = styled.div`\n    height: 4px;\n    width: 100%;\n    background-color: #e0e0de;\n    border-radius: 50px;\n`\n\nconst Filler = styled.div`\n    height: 100%;\n    border-radius: inherit;\n    text-align: right\n`\n\n\nexport const ProgressBar: React.FC<ProgressBarPropsType> = (props) => {\n\n    const { color, completed } = props\n\n\n\n    return (\n        <Container>\n            <Filler style={{\n                width: `${completed}%`,\n                backgroundColor: color,\n            }}></Filler>\n        </Container>\n    )\n}","import React from 'react'\nimport styled from 'styled-components';\nimport { Check } from '@material-ui/icons';\n\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`\n\nconst ImageContainer = styled.div`\n    width: 56px;\n    height: 56px;\n    border-radius: 50%;\n    background-position: center;\n    background-size: cover;\n    margin-right: 16px\n`\n\nconst SubjectContainer = styled.div`\n    flex: 1;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n`\n\nconst TextContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nconst CheckboxContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    border: 1px solid #727073\n`\n\ninterface SubjectCardPropsType {\n    key: string\n    image: string\n    title: string\n    chapters?: any\n    checked: boolean\n    onClick?: (e: React.MouseEvent<HTMLInputElement>) => void\n}\n\nexport const SubjectCard: React.FC<SubjectCardPropsType> = ({ key, image, title, chapters, checked, onClick }) => {\n\n\n    return (\n        <Container onClick={onClick} key={key}>\n            <ImageContainer style={{ backgroundImage: `url(${image})` }} />\n            <SubjectContainer>\n                <TextContainer>\n                    <span style={{ fontSize: '16px', fontWeight: 'bold', color: '#4B484B' }}>\n                        {title}\n                    </span>\n                    {chapters != null && chapters.map((chapter: any, i: number) => <span key={i.toString()} style={{ fontSize: '12px', color: '#4B484B', opacity: '80%', lineHeight: '1' }}>\n                        {chapter.chapterTitle}\n                    </span>)}\n                </TextContainer>\n                <CheckboxContainer>\n                    {checked && <Check style={{ color: '#727073' }} />}\n                </CheckboxContainer>\n            </SubjectContainer>\n        </Container>\n    );\n\n}\n\n","import styled from 'styled-components'\nimport Colors from '../../../utils/colors'\n\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n`\n\nexport const DiagonalContainer = styled.div`\n    height: 50%;\n    width: 100%;\n    background-color: ${Colors.primaryColor};\n    margin-bottom: 64px; \n`\n\nexport const LogoContainer = styled.div`\n    margin: 32px 0 32px 0;\n`\n\nexport const InputContainer = styled.div`\n    width: 90%\n`\n\nexport const ButtonContainer = styled.div`\n    margin-top: 32px;\n    margin-bottom: 32px\n`\n\nexport const ErrorMessage = styled.span`\n    color: #ff0000;\n    \n`","import React, { Component } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router'\nimport { Button, Card, Image } from 'antd'\nimport { Link } from 'react-router-dom'\nimport { TextField } from '../../components'\nimport { ButtonContainer, Container, DiagonalContainer, ErrorMessage, InputContainer, LogoContainer } from './components'\nimport StudentService from '../../services/StudentService'\nimport { resolve } from 'inversify-react'\n\n\nconst windowHeight = window.innerHeight\nconst windowWidth = window.innerWidth\n\nclass LoginScene extends Component<RouteComponentProps> {\n\n\n    @resolve(StudentService) private studentServ!: StudentService\n\n    state = {\n        email: '',\n        password: '',\n        showError: false\n    }\n\n\n    onSubmitLogin = async () => {\n        const { email, password } = this.state\n        const isLogged = await this.studentServ.login({ email, password })\n        if (isLogged) {\n            this.props.history.replace('/home')\n        } else {\n            this.setState({ showError: true })\n        }\n    }\n\n    onChangeEmail = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ email: e.target.value })\n    }\n\n    onChangePassword = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({ password: e.target.value })\n    }\n\n    render() {\n        const { showError } = this.state\n        return (\n            <Container>\n                <DiagonalContainer></DiagonalContainer>\n                <Card style={{\n                    height: `${windowWidth < 768 ? '60%' : '70%'}`,\n                    width: `${windowWidth < 768 ? '80%' : '50%'}`, borderRadius: '7px',\n                    marginTop: `-${windowHeight < 920 ? '256' : windowHeight * 0.35}px`\n                }} bodyStyle={{\n                    display: 'flex',\n                    height: '100%',\n                    flexDirection: 'column',\n                    justifyContent: 'space-evenly',\n                    alignItems: 'center',\n                    padding: '16px',\n                    backgroundColor: '#f3f9fe',\n                    borderRadius: '7px'\n                }}>\n                    <LogoContainer><Image src='../../../public/images/logo.jpeg' /></LogoContainer>\n                    {showError && <ErrorMessage>E-mail ou senha incorretos</ErrorMessage>}\n                    <InputContainer>\n                        <TextField placeholder='Seu e-mail' type='email' onChange={this.onChangeEmail} />\n                        <TextField placeholder='Sua senha' isPassword={true} onChange={this.onChangePassword} onSubmit={this.onSubmitLogin} />\n\n                        <div style={{width: '100%', textAlign: 'center'}}><Link to='/forgot-password'>Esqueci minha senha</Link></div>\n                    </InputContainer>\n                    <ButtonContainer>\n                        <Button onClick={this.onSubmitLogin} style={{ borderRadius: '8px' }} size='large' type='primary'>Entrar</Button>\n                    </ButtonContainer>\n                </Card>\n            </Container>\n        )\n    }\n\n}\n\nexport default withRouter(LoginScene);","import styled from 'styled-components'\nimport Colors from '../../../utils/colors'\n\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    height: 100%;\n    width: 100%;\n`\n\nexport const Body = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    height: 100%;\n    width: 100%;\n    margin: 32px 16px 56px 16px;\n    padding-bottom: 32px;\n    overflow-y: scroll;\n`\n\nexport const Header = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    background: ${Colors.primaryColor};\n    /* background: linear-gradient(\n    90deg,\n    rgba(253, 133, 23, 1) 0%,\n    rgba(255, 191, 31, 1) 100%\n    ); */\n    width: 100%;\n    min-height: 25%;\n`\n\nexport const LogoContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    margin-top: 24px;\n`\n\nexport const UserContentContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 100%;\n    padding: 0 16px 0 16px;\n`\n\nexport const UserGreetingsContainer = styled.div`\n    display: flex;\n    flex: 1;\n    margin-bottom: 16px;\n    flex-direction: column;\n    line-height: 0.5;\n    padding-left: 16px;\n`\n\nexport const UserGreetings = styled.span`\n    font-size: 20px;\n    font-weight: 500;\n    font-family: 'Roboto';\n    line-height: 0.5;\n    margin-bottom: 32px;\n`\n\nexport const UserGreetingsSub = styled.span`\n    font-size: 14px;\n    line-height: 0.9;\n`\n\nexport const UserGoalContainer = styled.div`\n    position: fixed;\n    display: flex;\n    margin-top: -8px;\n    flex-direction: column;\n    justify-content: flex-end;\n    align-items: center;\n`\n\nexport const UserGoalText = styled.span`\n    font-weight: 500;\n    font-family: 'Roboto';\n    font-size: 14px;\n    padding: 4px;\n    color: white;\n`\n\nexport const ScrollableCardBody = styled.div`\n    height: 85%;\n    overflow-y: scroll;\n    ::-webkit-scrollbar {\n        width: 0px;\n    }\n`","import styled from 'styled-components';\n\nexport const CardHeaderContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n    padding-bottom: 16px;\n    height: 15%\n`\n\nexport const ProgressContainer = styled.div`\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    margin-left: 16px\n`\n\nexport const ProgressLabelContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    font-size: 12px\n`","import styled from 'styled-components';\nimport Colors from '../../../utils/colors';\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    height: 100%;\n    width: 100%;\n`\n\nexport const ProfileHeader = styled.div`\n    flex-direction: column;\n    line-height: 0.5;\n    margin-top: 16px;\n    padding-left: 16px;\n    padding-bottom: 16px;\n    padding-right: 16px;\n    padding-left: 16px;\n    height: 25%;\n    width: 100%;\n`\n\nexport const ProfileImage = styled.div`\n    border-radius: 25px;\n    height: 100%;\n    width: 100%;\n    background: ${Colors.primaryColor};\n`","import { resolve } from 'inversify-react';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router'\nimport { RouteComponentProps } from 'react-router-dom';\nimport { StudentRepository } from '../../repositories/StudentRepository';\nimport Colors from '../../utils/colors';\nimport { Card, Image } from 'antd';\nimport { \n    ProfileHeader,\n    Container,\n    ProfileImage\n } from './components/index';\n\ntype Plan = {\n    _id: string,\n    startDate: string,\n    endDate: string,\n    contents: Array<any>\n}\n\nclass ProfileScene extends Component<RouteComponentProps>{\n\n    @resolve(StudentRepository) private studentRepo!: StudentRepository\n\n    state = {\n        tab: 'profile',\n        studentData: {\n            student: {\n                name: '',\n                goals: [{ university: '', course: '' }],\n                image: ''\n            },\n            plan: new Array<Plan>(),\n            note: ''\n        }\n    }\n\n    async componentDidMount() {\n        const student = await this.studentRepo.getStudent()\n        const homeData = await this.studentRepo.getHomeData()\n        console.log('name: ', student)\n        if (student != null && homeData != null) {\n            this.setState({ studentData: { student, plan: homeData.plan, note: homeData.note } })\n        } else {\n            this.props.history.replace('/login')\n        }\n    }\n\n    onChangeTab = (e: React.ChangeEvent<{}>, tab: string) => {\n        this.setState({ tab })\n    }\n\n    render() {\n        const { tab, studentData } = this.state\n        const { student, note, plan } = studentData\n        console.log('note:  ', note)\n        return (\n            <>\n                { tab == \"profile\" && <Container>\n                    <ProfileHeader>\n                        <ProfileImage>\n                             <div style={{\n                                marginLeft: '12px',\n                                width: '112px',\n                                height: '112px',\n                                borderRadius: '45%',\n                                backgroundPosition: 'center',\n                                verticalAlign: 'middle',\n                                backgroundSize: 'cover',\n                                backgroundImage: `url(${student.image})`\n                            }}>\n                            </div>\n                        </ProfileImage>\n                    </ProfileHeader>\n                </Container>\n                }\n            </>\n        )\n    }\n\n\n}\n\nexport default withRouter(ProfileScene);","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    height: 100%;\n    width: 100%;\n`\n\nexport const ReviewHeader = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n    padding-bottom: 16px;\n    height: 15%\n`\n","import { resolve } from 'inversify-react';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router'\nimport { RouteComponentProps } from 'react-router-dom';\nimport { StudentRepository } from '../../repositories/StudentRepository';\nimport Colors from '../../utils/colors';\nimport { \n    ReviewHeader,\n    Container\n } from './components/index';\n\ntype Plan = {\n    _id: string,\n    startDate: string,\n    endDate: string,\n    contents: Array<any>\n}\n\nclass ReviewScene extends Component<RouteComponentProps>{\n\n    @resolve(StudentRepository) private studentRepo!: StudentRepository\n\n    state = {\n        tab: 'profile',\n        studentData: {\n            student: {\n                name: '',\n                goals: [{ university: '', course: '' }],\n                image: ''\n            },\n            plan: new Array<Plan>(),\n            note: ''\n        }\n    }\n\n    async componentDidMount() {\n        const student = await this.studentRepo.getStudent()\n        const homeData = await this.studentRepo.getHomeData()\n        console.log('name: ', student)\n        if (student != null && homeData != null) {\n            this.setState({ studentData: { student, plan: homeData.plan, note: homeData.note } })\n        } else {\n            this.props.history.replace('/login')\n        }\n    }\n\n    onChangeTab = (e: React.ChangeEvent<{}>, tab: string) => {\n        this.setState({ tab })\n    }\n\n    render() {\n        const { tab, studentData } = this.state\n        const { student, note, plan } = studentData\n        console.log('note:  ', note)\n        return (\n            <>\n                { tab == \"profile\" && <Container>\n                    <ReviewHeader color={Colors.primaryColor}>\n                        <div>Review</div>\n                    </ReviewHeader>\n                </Container>\n                }\n            </>\n        )\n    }\n\n\n}\n\nexport default withRouter(ReviewScene);","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    height: 100%;\n    width: 100%;\n`\n\nexport const ProgressHeader = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n    padding-bottom: 16px;\n    height: 15%\n`\n","import { resolve } from 'inversify-react';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router'\nimport { RouteComponentProps } from 'react-router-dom';\nimport { StudentRepository } from '../../repositories/StudentRepository';\nimport Colors from '../../utils/colors';\nimport { \n    ProgressHeader,\n    Container\n } from './components/index';\n\ntype Plan = {\n    _id: string,\n    startDate: string,\n    endDate: string,\n    contents: Array<any>\n}\n\nclass ProgressScene extends Component<RouteComponentProps>{\n\n    @resolve(StudentRepository) private studentRepo!: StudentRepository\n\n    state = {\n        tab: 'profile',\n        studentData: {\n            student: {\n                name: '',\n                goals: [{ university: '', course: '' }],\n                image: ''\n            },\n            plan: new Array<Plan>(),\n            note: ''\n        }\n    }\n\n    async componentDidMount() {\n        const student = await this.studentRepo.getStudent()\n        const homeData = await this.studentRepo.getHomeData()\n        console.log('name: ', student)\n        if (student != null && homeData != null) {\n            this.setState({ studentData: { student, plan: homeData.plan, note: homeData.note } })\n        } else {\n            this.props.history.replace('/login')\n        }\n    }\n\n    onChangeTab = (e: React.ChangeEvent<{}>, tab: string) => {\n        this.setState({ tab })\n    }\n\n    render() {\n        const { tab, studentData } = this.state\n        const { student, note, plan } = studentData\n        console.log('note:  ', note)\n        return (\n            <>\n                { tab == \"profile\" && <Container>\n                    <ProgressHeader color={Colors.primaryColor}>\n                        <div>Progress</div>\n                    </ProgressHeader>\n                </Container>\n                }\n            </>\n        )\n    }\n\n\n}\n\nexport default withRouter(ProgressScene);","import { resolve } from 'inversify-react';\nimport React, { Component } from 'react';\nimport styled from 'styled-components'\n\n\nconst Card = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 56px;\n    height: 56px;\n    box-shadow: 0px 0px 4px 0.5px rgba(208,216,243,0.6);\n    border-radius: 7px;\n    background-color: #fff;\n`\n\nexport const Dates = (dates: Array<number>): JSX.Element[] => {\n\n    const elements = dates.map((day) => <Card key={day}>{day}</Card>)\n\n    return elements\n}","import React, { Component } from 'react';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport { CalendarToday, EmojiPeople, Home, TrendingUp } from '@material-ui/icons';\nimport { Card, Image } from 'antd';\nimport { resolve } from 'inversify-react';\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { SubjectCard, ProgressBar } from '../../components';\nimport { StudentRepository } from '../../repositories/StudentRepository';\nimport Colors from '../../utils/colors';\nimport {\n    Body, Container,\n    Header,\n    LogoContainer,\n    ScrollableCardBody, UserContentContainer,\n    UserGoalContainer,\n    UserGoalText,\n    UserGreetings,\n    UserGreetingsContainer,\n    UserGreetingsSub\n} from './components';\nimport { CardHeaderContainer, ProgressContainer, ProgressLabelContainer } from './components/Card';\nimport ProfileScene from '../ProfileScene';\nimport ReviewScene from '../ReviewScene';\nimport ProgressScene from '../ProgressScene';\n\nimport { Dates } from './components/Dates';\nimport './styles.css'\n\ntype Plan = {\n    _id: string,\n    startDate: string,\n    endDate: string,\n    contents: Array<any>\n}\n\nclass HomeScene extends Component<RouteComponentProps>{\n\n    @resolve(StudentRepository) private studentRepo!: StudentRepository\n\n    state = {\n        tab: 'home',\n        studentData: {\n            student: {\n                name: '',\n                goals: [{ university: '', course: '' }],\n                image: ''\n            },\n            plan: new Array<Plan>(),\n            note: ''\n        },\n        days: []\n    }\n\n    async componentDidMount() {\n        const student = await this.studentRepo.getStudent()\n        const homeData = await this.studentRepo.getHomeData()\n        const days = await this.studentRepo.getDates()\n        if (student != null && homeData != null) {\n            this.setState({ studentData: { student, plan: homeData.plan, note: homeData.note }, days })\n        } else {\n            this.props.history.replace('/login')\n        }\n    }\n\n    onChangeTab = (e: React.ChangeEvent<{}>, tab: string) => {\n        this.setState({ tab })\n    }\n\n    render() {\n        const { tab, studentData, days } = this.state\n        const { student, note, plan } = studentData\n        console.log('note:  ', note)\n        return (\n            <>\n                <BottomNavigation\n                    value={tab}\n                    showLabels\n                    onChange={this.onChangeTab}\n                    style={{\n                        position: 'absolute',\n                        bottom: 0,\n                        left: 0,\n                        width: '100%',\n                        backgroundColor: '#F3F3F3',\n                    }}\n                >\n                    <BottomNavigationAction label=\"Início\" value='home' icon={<Home />} />\n                    <BottomNavigationAction label=\"Revisões\" value='review' icon={<CalendarToday />} />\n                    <BottomNavigationAction label=\"Progresso\" value='progress' icon={<TrendingUp />} />\n                    <BottomNavigationAction label=\"Perfil\" value='profile' icon={<EmojiPeople />} />\n                </BottomNavigation>\n                { tab == \"profile\" && <ProfileScene>\n\n                </ProfileScene>\n                }\n                { tab == \"review\" && <ReviewScene>\n\n                </ReviewScene>\n                }\n                { tab == \"progress\" && <ProgressScene>\n\n                </ProgressScene>\n                }\n                {/* home */}\n                {student != null &&  tab == \"home\" && <Container>\n                    <Header>\n                        <LogoContainer><Image width={'100px'} src='../../../public/images/logo-transparent.png' /></LogoContainer>\n                        <UserGreetings>Bem-vindo {student.name}</UserGreetings>\n                        {/* <UserContentContainer>\n                            <div style={{\n                                width: '112px',\n                                height: '134px',\n                                borderRadius: '45%',\n                                backgroundPosition: 'center',\n                                backgroundSize: 'cover',\n                                backgroundImage: `url(${student.image})`\n                            }}>\n                            </div>\n                            <UserGreetingsContainer>\n                                <UserGreetings>Olá, {student.name}</UserGreetings><br />\n                                <UserGreetingsSub>Aqui está a sua tarefa da semana.<br />\n                                    Bons Estudos!\n                                </UserGreetingsSub>\n                                <div style={{\n                                    display: 'flex',\n                                    justifyContent: 'flex-end',\n                                    width: '100%'\n                                }}>\n                                     <UserGoalContainer>\n                                        <Image width='72px' src='../../../public/images/dart-board.png' />\n                                        <UserGoalText>{student.goals[0].course} - {student.goals[0].university}</UserGoalText>\n                                    </UserGoalContainer>\n                                </div>\n                            </UserGreetingsContainer>\n                        </UserContentContainer> */}\n                    </Header>\n                    <div style={{ width: '100%', marginTop: '-16px', padding: '2px' }}>\n                        <ScrollMenu\n                            data={Dates(days)}\n                        />\n                    </div>\n                    <Body>\n                        <Card style={{\n                            height: '80%',\n                            width: '90%',\n                            borderRadius: '7px',\n                            boxShadow: \"5px 4px 2px 0.5px rgba(208, 216, 243, 0.6)\",\n                        }}\n                            bodyStyle={{\n                                padding: '16px 16px 0 16px',\n                                height: '100%'\n                            }}\n                        >\n                            <CardHeaderContainer>\n                                <span style={{\n                                    fontSize: '20px',\n                                    fontWeight: 500,\n                                    fontFamily: 'Roboto',\n                                }}>Tarefa</span>\n                                <ProgressContainer>\n                                    <ProgressLabelContainer><span>Progresso</span><span>55%</span></ProgressLabelContainer>\n                                    <ProgressBar color={Colors.secundaryColor} completed={'55'} />\n                                </ProgressContainer>\n                            </CardHeaderContainer>\n                            <ScrollableCardBody>\n                                {plan.length >= 1 && plan[0].contents.map(\n                                    ({ subject }: any, key: number) => <SubjectCard\n                                        key={key.toString()}\n                                        title={subject.subjectTitle}\n                                        checked={false}\n                                        onClick={() => this.props.history.push('content', { color: '#DBD426', title: 'Biologia', weekAssignment: [{ title: '', subTitle: '' }] })}\n                                        chapters={subject.chapter}\n                                        image='https://www.clipartmax.com/png/middle/466-4663689_maths-subject-icon-png.png' />\n                                )}\n                            </ScrollableCardBody>\n                        </Card>\n                        <Card style={{\n                            marginTop: '16px',\n                            height: '30%',\n                            width: '90%',\n                            borderRadius: '7px',\n                            boxShadow: \"5px 4px 2px 0.5px rgba(208, 216, 243, 0.6)\",\n                        }}\n                            bodyStyle={{\n                                display: 'flex',\n                                flexDirection: 'column',\n                                padding: '16px 16px 16px 16px',\n                                height: '100%'\n                            }}\n                        >\n                            <span style={{\n                                fontSize: '20px',\n                                fontWeight: 500,\n                                fontFamily: 'Roboto',\n                            }}>Recadinho</span>\n                            <span>\n                                {note}\n                            </span>\n                        </Card>\n                    </Body>\n                </Container>}\n            </>\n        )\n    }\n\n\n}\n\nexport default HomeScene;","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register() {\nif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n// The URL constructor is available in all browsers that support SW.\nconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\nif (publicUrl.origin !== window.location.origin) {\n  // Our service worker won't work if PUBLIC_URL is on a different origin\n  // from what our page is served on. This might happen if a CDN is used to\n  // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n  return;\n}\n\nwindow.addEventListener('load', () => {\n  const swUrl = `/service-worker.js`;\n\n  if (!isLocalhost) {\n    // Is not local host. Just register service worker\n    registerValidSW(swUrl);\n  } else {\n    // This is running on localhost. Lets check if a service worker still exists or not.\n    checkValidServiceWorker(swUrl);\n  }\n});\n}\n}\n\nfunction registerValidSW(swUrl) {\nnavigator.serviceWorker\n.register(swUrl)\n.then(registration => {\n  registration.onupdatefound = () => {\n    const installingWorker = registration.installing;\n    installingWorker.onstatechange = () => {\n      if (installingWorker.state === 'installed') {\n        if (navigator.serviceWorker.controller) {\n          // At this point, the old content will have been purged and\n          // the fresh content will have been added to the cache.\n          // It's the perfect time to display a \"New content is\n          // available; please refresh.\" message in your web app.\n          console.log('New content is available; please refresh.');\n        } else {\n          // At this point, everything has been precached.\n          // It's the perfect time to display a\n          // \"Content is cached for offline use.\" message.\n          console.log('Content is cached for offline use.');\n        }\n      }\n    };\n  };\n})\n.catch(error => {\n  console.error('Error during service worker registration:', error);\n});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n// Check if the service worker can be found. If it can't reload the page.\nfetch(swUrl)\n.then(response => {\n  // Ensure service worker exists, and that we really are getting a JS file.\n  if (\n    response.status === 404 ||\n    response.headers.get('content-type').indexOf('javascript') === -1\n  ) {\n    // No service worker found. Probably a different app. Reload the page.\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister().then(() => {\n        window.location.reload();\n      });\n    });\n  } else {\n    // Service worker found. Proceed as normal.\n    registerValidSW(swUrl);\n  }\n})\n.catch(() => {\n  console.log(\n    'No internet connection found. App is running in offline mode.'\n  );\n});\n}\n\nexport function unregister() {\nif ('serviceWorker' in navigator) {\nnavigator.serviceWorker.ready.then(registration => {\n  registration.unregister();\n});\n}\n}","import styled from 'styled-components';\n\n\nexport const Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    width: 100%;\n    background-color: #fff\n`\n\n","import { Card } from 'antd';\nimport React, { Component } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {Container} from './components'\n\nclass ContentScene extends Component<RouteComponentProps> {\n\n\n    render(){\n        return (\n            <Container>\n                <Card style={{\n                            height: '80%',\n                            width: '90%',\n                            borderRadius: '7px',\n                            boxShadow: \"5px 4px 2px 0.5px rgba(208, 216, 243, 0.6)\",\n                        }}\n                            bodyStyle={{\n                                padding: '16px 16px 0 16px',\n                                height: '100%'\n                            }}\n                        ></Card>\n            </Container>\n        )\n    }\n\n\n}\n\nexport default ContentScene","import React, { Component } from 'react'\nimport ReactDom from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nimport './utils/setup'\nimport 'antd/dist/antd.css';\nimport { Provider as InversifyProvider } from 'inversify-react'\nimport { Container as UnstatedContainer, Provider as UnstatedProvider } from 'unstated'\nimport MonitoriaContainer from './utils/container'\n\nimport LoginScene from './scenes/LoginScene'\nimport HomeScene from './scenes/HomeScene'\nimport registerServiceWorker from './registerServiceWorker';\nimport { UNSTATED_CONTAINERS } from './repositories/UnstatedBinds';\nimport SubjectScene from './scenes/SubjectScene';\nimport ProfileScene from './scenes/ProfileScene/index'\n\nclass App extends Component {\n\n    render() {\n        return (\n            <InversifyProvider container={MonitoriaContainer}>\n                <UnstatedProvider inject={MonitoriaContainer.get<UnstatedContainer<any>[]>(UNSTATED_CONTAINERS)}>\n                    <Router>\n                        <Switch>\n                            <Route exact path=\"/\" render={() => <Redirect to='/login' />} />\n                            <Route exact path='/home' component={HomeScene} /> \n                            <Route exact path='/login' component={LoginScene} />\n                            <Route exact path='/subject' component={SubjectScene} />\n                            <Route exact path='/profile' component={ProfileScene} />\n                        </Switch>\n                    </Router>\n                    </UnstatedProvider>\n            </InversifyProvider>)\n    }\n}\n\nReactDom.render(<App />, document.getElementById('root'))\nregisterServiceWorker()"],"sourceRoot":""}